import unittest 
import random
import numpy as np
import pandas as pd
from pandas import Series, DataFrame
import cx_Oracle
import sqlalchemy as sa
from sqlalchemy import create_engine

def get_data(entity_id,score_id):
    conn = cx_Oracle.connect('ifrm_uds/SquareOne123@10.0.0.180:1521/ORCL.ap-south-1.compute.internal')
    cursor = conn.cursor()
    Select_Query1 = "select SCORE_VALUE from entity_score where ENTITY_ID = '{0}' and SCORE_ID={1}".format(entity_id,score_id) 
    print(Select_Query1)
    cursor.execute(Select_Query1)
    ret = pd.DataFrame(cursor.fetchall())
    score_value = ret.iloc[0,0]
   # print("score_value:", score_value)
    return(score_value)

class TestMethod(unittest.TestCase):
    def test_TS_CDS002(self):
        score_value = get_data('8025973082',102)
        self.assertEquals(score_value,100)
    def test_TS_CDS003(self):
        score_value = get_data('8025973083',102)
        self.assertEquals(score_value,80)
    def test_TS_CDS004(self):
        score_value = get_data('8025973084',102)
        self.assertEquals(score_value,80)
    def test_TS_CDS005(self):
        score_value = get_data('8025973085',102)
        self.assertEquals(score_value,80)
    def test_TS_CDS006(self):
        score_value = get_data('8025973086',102)
        self.assertEquals(score_value,80)
    def test_TS_CDS007(self):
        score_value = get_data('8025973087',102)
        self.assertEquals(score_value,80)
    def test_TS_CDS008(self):
        score_value = get_data('8025973088',102)
        self.assertEquals(score_value,60)
    def test_TS_CDS009(self):
        score_value = get_data('8025973089',102)
        self.assertEquals(score_value,60)
    def test_TS_CDS010(self):
        score_value = get_data('8025973090',102)
        self.assertEquals(score_value,60)
    def test_TS_CDS011(self):
        score_value = get_data('8025973091',102)
        self.assertEquals(score_value,60)
    def test_TS_CDS012(self):
        score_value = get_data('8025973092',102)
        self.assertEquals(score_value,60)
    def test_TS_CDS013(self):
        score_value = get_data('8025973093',102)
        self.assertEquals(score_value,60)
    def test_TS_CDS014(self):
        score_value = get_data('8025973094',102)
        self.assertEquals(score_value,60)
    def test_TS_CDS015(self):
        score_value = get_data('8025973095',102)
        self.assertEquals(score_value,60)
    def test_TS_CDS016(self):
        score_value = get_data('8025973096',102)
        self.assertEquals(score_value,60)
    def test_TS_CDS017(self):
        score_value = get_data('8025973097',102)
        self.assertEquals(score_value,60)
    def test_TS_CDS018(self):
        score_value = get_data('8025973098',102)
        self.assertEquals(score_value,40)
    def test_TS_CDS019(self):
        score_value = get_data('8025973099',102)
        self.assertEquals(score_value,40)
    def test_TS_CDS020(self):
        score_value = get_data('8025973100',102)
        self.assertEquals(score_value,40)
    def test_TS_CDS021(self):
        score_value = get_data('8025973101',102)
        self.assertEquals(score_value,40)
    def test_TS_CDS022(self):
        score_value = get_data('8025973102',102)
        self.assertEquals(score_value,40)
    def test_TS_CDS023(self):
        score_value = get_data('8025973103',102)
        self.assertEquals(score_value,40)
    def test_TS_CDS024(self):
        score_value = get_data('8025973104',102)
        self.assertEquals(score_value,40)
    def test_TS_CDS025(self):
        score_value = get_data('8025973105',102)
        self.assertEquals(score_value,40)
    def test_TS_CDS026(self):
        score_value = get_data('8025973106',102)
        self.assertEquals(score_value,40)
    def test_TS_CDS027(self):
        score_value = get_data('8025973107',102)
        self.assertEquals(score_value,40)
    def test_TS_CDS028(self):
        score_value = get_data('8025973108',102)
        self.assertEquals(score_value,20)
    def test_TS_CDS029(self):
        score_value = get_data('8025973109',102)
        self.assertEquals(score_value,20)
    def test_TS_CDS030(self):
        score_value = get_data('8025973110',102)
        self.assertEquals(score_value,20)
    def test_TS_CDS031(self):
        score_value = get_data('8025973111',102)
        self.assertEquals(score_value,20)
    def test_TS_CDS032(self):
        score_value = get_data('8025973112',102)
        self.assertEquals(score_value,20)
    def test_TS_CDS033(self):
        score_value = get_data('8025973113',102)
        self.assertEquals(score_value,20)
if __name__=='__main__':
     unittest.main()
