import unittest 
import random
import numpy as np
import pandas as pd
from pandas import Series, DataFrame
import cx_Oracle
import sqlalchemy as sa
from sqlalchemy import create_engine

def get_data(entity_id,score_id):
    conn = cx_Oracle.connect('ifrm_uds/SquareOne123@10.0.0.180:1521/ORCL.ap-south-1.compute.internal')
    cursor = conn.cursor()
    Select_Query1 = "select SCORE_VALUE from entity_score where ENTITY_ID = '{0}' and SCORE_ID={1}".format(entity_id,score_id) 
    print(Select_Query1)
    cursor.execute(Select_Query1)
    ret = pd.DataFrame(cursor.fetchall())
    score_value = ret.iloc[0,0]
   # print("score_value:", score_value)
    return(score_value)
class TestMethod(unittest.TestCase):
    def test_TS_CDS001(self):
        score_value = get_data('5466101198',101)
        self.assertEquals(score_value,100)
    def test_TS_CDS002(self):
        score_value = get_data('2681297179',101)
        self.assertEquals(score_value,100)
    def test_TS_CDS003(self):
        score_value = get_data('3023774134',101)
        self.assertEquals(score_value,100)
    def test_TS_CDS004(self):
        score_value = get_data('5000079353',101)
        self.assertEquals(score_value,100)
    def test_TS_CDS005(self):
        score_value = get_data('1340002075',101)
        self.assertEquals(score_value,100)
    def test_TS_CDS006(self):
        score_value = get_data('8608625753',101)
        self.assertEquals(score_value,100)
    def test_TS_CDS007(self):
        score_value = get_data('6069432004',101)
        self.assertEquals(score_value,100)
    def test_TS_CDS008(self):
        score_value = get_data('2036658691',101)
        self.assertEquals(score_value,100)
    def test_TS_CDS009(self):
        score_value = get_data('8432506837',101)
        self.assertEquals(score_value,100)
    def test_TS_CDS010(self):
        score_value = get_data('2025550693',101)
        self.assertEquals(score_value,100)
    def test_TS_CDS011(self):
        score_value = get_data('4713923274',101)
        self.assertEquals(score_value,100)
    def test_TS_CDS012(self):
        score_value = get_data('8559149955',101)
        self.assertEquals(score_value,100)
if __name__=='__main__':
     unittest.main()